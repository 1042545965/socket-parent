<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
      http://www.springframework.org/schema/context
      	http://www.springframework.org/schema/context/spring-context-4.3.xsd
      http://www.springframework.org/schema/tx
      http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
      http://www.springframework.org/schema/aop
      http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
     
<!-- 	     不扫描@Controller,扫描注解Bean dkz加注，这里是spring管控service和bean的地方不能去扫描springmvc的controller，我遇到的是事务会失效  -->
    <context:component-scan base-package="com.socket.web.service.impl" >
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>  
	
	<!-- 加载所有配置文件 -->
	<bean id="propertyConfigurer"
		  class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:properties/jdbc.properties</value>
				<value>classpath:properties/redis.properties</value>
				<value>classpath:properties/config.properties</value>
			</list>
		</property>
	</bean>
	<!-- context:annotation-config 该标签隐式的向Spring容器注册了：
AutowiredAnnotationBeanPostProcessor   CommondAnnotationBeanPostProcessor
PersistenceAnnotationBeanPostProcessor   RequiredAnnotationBeanPostProcessor这四个BeanPostProcessor
  -->
	<context:annotation-config />


	

	<!-- 配置数据源 -->
	<bean id="dynamicDataSource" class="com.ext.cloud.core.dao.dynamic.DynamicDataSource">
		<property name="defaultTargetDataSource" ref="dataSource"></property>
		<property name="targetDataSources">
	        <map key-type="java.lang.String">
	            <entry key="ds1" value-ref="dataSource" />
	        </map>
	    </property>
	</bean>
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dynamicDataSource" />
	</bean>
	
	<!-- 	默认Dao -->	
	<bean id="cocoDao" class="com.ext.cloud.core.dao.CoCoDao">
		<property name="jt" ref="jdbcTemplate"></property>
		<property name="dataSource" ref="dynamicDataSource"></property>
	</bean>
	
	<!-- 数据库连接池 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="driverClassName" value="${jdbc.driver}" />
		<!-- 初始化连接大小 -->  
        <property name="initialSize" value="${jdbc.initialSize}"></property>  
        <!-- 连接池最大数量 -->  
        <property name="maxActive" value="${jdbc.maxActive}"></property>  
        <!-- 连接池最大空闲 -->  
        <property name="maxIdle" value="${jdbc.maxIdle}"></property>  
        <!-- 连接池最小空闲 -->  
        <property name="minIdle" value="${jdbc.minIdle}"></property>  
        <!-- 获取连接最大等待时间 -->  
        <property name="maxWait" value="${jdbc.maxWait}"></property>  
	</bean>
	


	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 采用@Transactional注解方式使用事务   ，-->  
    <tx:annotation-driven transaction-manager="txManager"/> 
    
	
</beans>
